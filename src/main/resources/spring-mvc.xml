<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.0.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="cn.edu.sspu.controller" />

	<!-- 引入适配器和映射器,同时具备了json和pojo转换功能 -->
	<!-- 注意:这个注解和下面的拦截器有点冲突，具体还没有去详解
		具体链接可查看：http://blog.csdn.net/akon_vm/article/details/12853269
	 -->
	<mvc:annotation-driven/>
	
	
	<!--配置拦截器, 多个拦截器,顺序执行 -->  
	<mvc:interceptors>   
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->  
		 <mvc:interceptor>
	        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
	        <mvc:mapping path="/admin/db/**/*.do" />
	        <mvc:mapping path="/adminManergeUserController/**/*.do" />  
	        <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
	        <bean class="cn.edu.sspu.interceptor.AdminInterceptor"></bean>    
	    </mvc:interceptor>
		
		
	    <mvc:interceptor>
	        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
	        <mvc:mapping path="/user/**/*.do" /> 
	        <mvc:mapping path="/userTable/**/*.do" /> 
	        <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
	        <bean class="cn.edu.sspu.interceptor.SessionInterceptor"></bean>    
	    </mvc:interceptor>
	    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
	</mvc:interceptors>
	
	<bean id="globalException" class="cn.edu.sspu.exception.GlobalException"></bean>


	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".html" />

	<!-- 文件上传配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>1048576</value><!-- 上传文件大小限制为1M，1*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">fileOutofSize</prop>  
            </props>  
        </property>  
    </bean> 
    
    
	
	

</beans>